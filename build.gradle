apply from: "$project.rootDir/spotless.gradle"

buildscript {
  ext {
    spotlessVersion = "3.27.2"
  }
  repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }
    jcenter()
      mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
  }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "${mod_version}-${mod_build}"
group = "${mod_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
  mappings channel: 'snapshot', version: "${forge_mappings}"

  runs {
    client {
      workingDirectory project.file('run')

        // Recommended logging data for a userdev environment
        property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

        // Recommended logging level for the console
        property 'forge.logging.console.level', 'debug'

        mods {
          nanomachines {
            source sourceSets.main
          }
        }
    }

    server {
      workingDirectory project.file('run')

        // Recommended logging data for a userdev environment
        property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

        // Recommended logging level for the console
        property 'forge.logging.console.level', 'debug'

        mods {
          nanomachines {
            source sourceSets.main
          }
        }
    }

    data {
      workingDirectory project.file('run')

        // Recommended logging data for a userdev environment
        property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

        // Recommended logging level for the console
        property 'forge.logging.console.level', 'debug'

        mods {
          nanomachines {
            source sourceSets.main
          }
        }
      args '--mod', 'nanomachines', '--all',
           '--existing', '"' + file('src/main/resources/') + '"',
           '--existing', '"' + file('src/generated/resources/') + '"',
           '--output', file('src/generated/resources/')
    }
  }
}

sourceSets.main.resources {
  srcDir 'src/generated/resources'
}

compileJava {
    options.compilerArgs += '-proc:none'
}

dependencies {
  minecraft "net.minecraftforge:forge:${forge_version}"
}

jar {
  manifest {
    attributes([
      "Specification-Title": "nanomachines",
      "Specification-Vendor": "Eleonóra Alíz Takács",
      "Specification-Version": "1",
      "Implementation-Title": "project.name",
      "Implementation-Version": "${version}",
      "Implementation-Vendor" :"Eleonóra Alíz Takács",
      "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

task srcJar(type: Jar) {
  from(sourceSets.main.java)
    classifier = 'sources'
}

build.dependsOn spotlessCheck
